{"version":3,"file":"index.c9cd2361.js","sources":["../../vite/modulepreload-polyfill","../../main.js"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import './style.css';\nimport {Map, View} from 'ol';\nimport TileLayer from 'ol/layer/Tile';\nimport OSM from 'ol/source/OSM';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport Projection from 'ol/proj/Projection';\nimport proj4 from 'proj4';\nimport {transformExtent} from 'ol/proj';\nimport {fromLonLat} from 'ol/proj';\nimport {register} from 'ol/proj/proj4';\nimport {Style, Fill, Stroke} from 'ol/style';\n\nproj4.defs(\"EPSG:2163\",\"+proj=laea +lat_0=45 +lon_0=-100 +x_0=0 +y_0=0 +a=6370997 +b=6370997 +units=m +no_defs\");\nregister(proj4);\n\nconst map = new Map({\n  target: 'map',\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    }),\n    new VectorLayer({\n      source: new VectorSource({\n        format: new GeoJSON(),\n        url: 'nps-project.json'}),\n      // style: new Style({                 Code for Static Style lines 29 through 36 from https://openlayers.org/workshop/en/vector/style.html . Kept here for future reference.\n      //       fill: new Fill({\n      //         color: 'red'\n      //       }),\n      //       stroke: new Stroke({\n      //         color: 'white'\n      //       })\n      //     })\n      style: function(feature, resolution) {     //Line 37 through 59 copied from https://openlayers.org/workshop/en/vector/style.html\n            var name = feature.get('UNIT_TYPE');\n            var style1 = new Style({\n                  fill: new Fill({\n                    color: 'rgba(0, 255, 85, 0.4)'  //Color from W3 HTML Color Picker https://www.w3schools.com/colors/colors_picker.asp\n                  }),\n                  stroke: new Stroke({\n                    color: '#344d4d'   //Color from W3 HTML Color Picker https://www.w3schools.com/colors/colors_picker.asp\n                    })\n                  });\n\n            var style2 = new Style({\n                 fill: new Fill({\n                   color: 'rgba(255, 0, 0, 0.5)'  //Color from W3 HTML Color Picker https://www.w3schools.com/colors/colors_picker.asp\n                  }),\n                 stroke: new Stroke({\n                   color: '#344d4d'  //Color from W3 HTML Color Picker https://www.w3schools.com/colors/colors_picker.asp\n                    })\n                  });\n\n            return name == \"National Park\" ? style1 : style2;\n          }\n        })\n  ],\n\n  view: new View({\n      projection: 'EPSG:2163',\n      center: fromLonLat([37,-95], 'EPSG:2163'),\n      zoom: 3,\n      extent: transformExtent([167.65, 15.56, -65.69, 74.71], 'EPSG:4326', 'EPSG:2163'),\n    })\n});\n"],"names":[],"mappings":"oIAAA,KAAM,GAAI,UAAoB,CAC1B,KAAM,GAAU,SAAS,cAAc,QAAQ,QAC/C,GAAI,GAAW,EAAQ,UAAY,EAAQ,SAAS,iBAChD,OAEJ,SAAW,KAAQ,UAAS,iBAAiB,6BACzC,EAAe,GAEnB,GAAI,kBAAiB,AAAC,GAAc,CAChC,SAAW,KAAY,GACnB,GAAI,EAAS,OAAS,YAGtB,SAAW,KAAQ,GAAS,WACxB,AAAI,EAAK,UAAY,QAAU,EAAK,MAAQ,iBACxC,EAAe,KAG5B,QAAQ,SAAU,CAAE,UAAW,GAAM,QAAS,KACjD,WAAsB,EAAQ,CAC1B,KAAM,GAAY,GAClB,MAAI,GAAO,WACP,GAAU,UAAY,EAAO,WAC7B,EAAO,gBACP,GAAU,eAAiB,EAAO,gBACtC,AAAI,EAAO,cAAgB,kBACvB,EAAU,YAAc,UACvB,AAAI,EAAO,cAAgB,YAC5B,EAAU,YAAc,OAExB,EAAU,YAAc,cACrB,EAEX,WAAwB,EAAM,CAC1B,GAAI,EAAK,GAEL,OACJ,EAAK,GAAK,GAEV,KAAM,GAAY,EAAa,GAC/B,MAAM,EAAK,KAAM,KAEvB,AAAoB,IC5BtB,EAAM,KAAK,YAAY,0FACvB,EAAS,GAEG,GAAI,GAAI,CAClB,OAAQ,MACR,OAAQ,CACN,GAAI,GAAU,CACZ,OAAQ,GAAI,KAEd,GAAI,GAAY,CACd,OAAQ,GAAI,GAAa,CACvB,OAAQ,GAAI,GACZ,IAAK,qBASP,MAAO,SAAS,EAAS,EAAY,CAC/B,GAAI,GAAO,EAAQ,IAAI,aACnB,EAAS,GAAI,GAAM,CACjB,KAAM,GAAI,GAAK,CACb,MAAO,0BAET,OAAQ,GAAI,GAAO,CACjB,MAAO,cAIX,EAAS,GAAI,GAAM,CAClB,KAAM,GAAI,GAAK,CACb,MAAO,yBAET,OAAQ,GAAI,GAAO,CACjB,MAAO,cAId,MAAO,IAAQ,gBAAkB,EAAS,MAKpD,KAAM,GAAI,GAAK,CACX,WAAY,YACZ,OAAQ,EAAW,CAAC,GAAG,KAAM,aAC7B,KAAM,EACN,OAAQ,EAAgB,CAAC,OAAQ,MAAO,OAAQ,OAAQ,YAAa"}